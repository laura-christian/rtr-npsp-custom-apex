public class ParseSmartyStreetsJSON {

    public static npsp__Address__c parseSmartyStreetsJSONDomestic(npsp__Address__c addr, String s) {
		addr.npsp__API_Response__c = s;
        Map<String, Object> mappedJSON = (Map<String, Object>)JSON.deserializeUntyped(s);
        if (s.contains('delivery_line_1')) {
            addr.Address1__c = (String)mappedJSON.get('delivery_line_1');
            addr.npsp__MailingStreet__c = addr.Address1__c;
            addr.npsp__MailingStreet2__c = '';
        }
        if (s.contains('last_line')) {addr.Address2__c = (String)mappedJSON.get('last_line');}
        if (s.contains('delivery_point_barcode')) {addr.Delivery_Point_Barcode_Number__c = (String)mappedJSON.get('delivery_point_barcode');}
        if (s.contains('components')) {
            Map<String, Object> components = (Map<String, Object>)mappedJSON.get('components');
			addr.npsp__MailingCity__c = (String)components.get('city_name');
        	System.debug(addr.npsp__MailingCity__c);
			addr.npsp__MailingState__c = (String)components.get('state_abbreviation');
			System.debug(addr.npsp__MailingState__c);
			addr.ZIP__c = (String)components.get('zipcode');
			addr.ZIP_Plus_4__c = (String)components.get('plus4_code');
            addr.npsp__MailingPostalCode__c = (String)components.get('zipcode') + '-' + (String)components.get('plus4_code');
			System.debug(addr.npsp__MailingPostalCode__c);
            addr.npsp__MailingCountry__c = 'United States';
            if (s.contains('primary_number')) {addr.Street_Number__c = (String)components.get('primary_number');}
            if (s.contains('street_name')) {addr.Street_Name__c = (String)components.get('street_name');}
            if (s.contains('street_suffix')) {addr.Street_Type__c = (String)components.get('street_suffix');}
            if (s.contains('secondary_number')) {addr.Building_Unit_Number__c = (String)components.get('secondary_number');}
            if (s.contains('secondary_designator')) {addr.Building_Unit_Type__c = (String)components.get('secondary_designator');}
            if (s.contains('street_predirection')) {addr.Pre_Direction__c = (String)components.get('street_predirection');}
            if (s.contains('street_postdirection')) {addr.Post_Direction__c = (String)components.get('street_postdirection');}
            if (s.contains('pmb_number')) {addr.PMB__c = (String)components.get('pmb_number');}
            if (s.contains('pmb_designator')) {addr.PMB_Designator__c = (String)components.get('pmb_designator');}
        }
        if (s.contains('metadata')) {
			Map<String, Object> metadata = (Map<String, Object>)mappedJSON.get('metadata');
            if (s.contains('county_name')) {addr.npsp__County_Name__c = (String)metadata.get('county_name');}
            if (s.contains('carrier_route')) {addr.Carrier_Route__c = (String)metadata.get('carrier_route');}
            if (s.contains('congressional_district')) {addr.npsp__Congressional_District__c  = (String)metadata.get('congressional_district');}
            if (s.contains('latitude')) {addr.npsp__Geolocation__Latitude__s = (Decimal)metadata.get('latitude');}
            if (s.contains('longitude')) {addr.npsp__Geolocation__Longitude__s = (Decimal)metadata.get('longitude');}
            if (s.contains('precision')) {addr.Address_Precision__c = (String)metadata.get('precision');}
            if (s.contains('rdi')) {addr.RDI__c = (String)metadata.get('rdi');}            
        }
        if (s.contains('analysis')) {
			Map<String, Object> analysis = (Map<String, Object>)mappedJSON.get('analysis');
            if (s.contains('dpv_match_code')) {
                if ((String)analysis.get('dpv_match_code') == '') {addr.DPV__c = 'E';}
                else {addr.DPV__c = (String)analysis.get('dpv_match_code');} 
        	}
            if (s.contains('dpv_vacant') && (String)analysis.get('dpv_vacant') == 'Y') {addr.Vacant__c = true;}
            if (s.contains('dpv_footnotes')) {addr.DPV_Footnote__c = (String)analysis.get('dpv_footnotes');}
        }
        addr.npsp__Verified__c = true;
        addr.Do_Not_Verify__c = true;
        return addr;
    }
    
    public static npsp__Address__c parseSmartyStreetsJSONInternational(npsp__Address__c addr, String s) {
        addr.npsp__API_Response__c = s;
		Map<String, Object> mappedJSON = (Map<String, Object>)JSON.deserializeUntyped(s);
        List<String> addressLines = new List<String>();
        if (s.contains('address1')) {addr.Address1__c = (String)mappedJSON.get('address1'); addressLines.add(addr.Address1__c);}
        if (s.contains('address2')) {addr.Address2__c = (String)mappedJSON.get('address2'); addressLines.add(addr.Address2__c);}
        if (s.contains('address3')) {addr.Address3__c = (String)mappedJSON.get('address3'); addressLines.add(addr.Address3__c);}
        if (s.contains('address4')) {addr.Address4__c = (String)mappedJSON.get('address4'); addressLines.add(addr.Address4__c);}
        if (s.contains('address5')) {addr.Address5__c = (String)mappedJSON.get('address5'); addressLines.add(addr.Address5__c);}        
        if (s.contains('address6')) {addr.Address6__c = (String)mappedJSON.get('address6'); addressLines.add(addr.Address6__c);}
        System.debug(addressLines);
        Map<String, Object> components = (Map<String, Object>)mappedJSON.get('components');
        if (s.contains('administrative_area')) {addr.npsp__Administrative_Area__c = (String)components.get('administrative_area');}
        if (s.contains('super_administrative_area')) {addr.Super_Administrative_Area__c = (String)components.get('super_administrative_area');}
        if (components.keySet().contains('double_dependent_locality')) {addr.Double_Dependent_Locality__c = (String)components.get('double_dependent_locality');}
        if (components.keySet().contains('dependent_locality')) {addr.Dependent_Locality__c = (String)components.get('dependent_locality');}
        if (components.keySet().contains('locality')) {addr.Locality__c = (String)components.get('locality');}
        if (s.contains('postal_code')) {addr.Zip__c = (String)components.get('postal_code');}
        if (s.contains('premise')) {addr.Street_Number__c = (String)components.get('premise');}
        if (s.contains('thoroughfare_name')) {addr.Street_Name__c = (String)components.get('thoroughfare_name');}
        if (s.contains('thoroughfare_type')) {addr.Street_Type__c = (String)components.get('thoroughfare_type');}
        if (s.contains('thoroughfare_trailing_type')) {addr.Street_Type__c = (String)components.get('thoroughfare_trailing_type');}
        if (s.contains('thoroughfare_leading_type')) {addr.Street_Type__c = (String)components.get('thoroughfare_leading_type');}
        if (s.contains('thoroughfare_predirection')) {addr.Pre_Direction__c = (String)components.get('thoroughfare_predirection');}
        if (s.contains('thoroughfare_postdirection')) {addr.Post_Direction__c = (String)components.get('thoroughfare_postdirection');}
        if (s.contains('building')) {addr.Building__c = (String)components.get('building');}
        if (s.contains('sub_building')) {addr.Sub_Building__c = (String)components.get('sub_building');}
        if (s.contains('sub_building_number')) {addr.Building_Unit_Number__c = (String)components.get('sub_building_number');}
        if (s.contains('sub_building_type')) {addr.Building_Unit_Type__c = (String)components.get('sub_building_type');}
        if (s.contains('organization')) {addr.Organization__c = (String)components.get('organization');}
        if (s.contains('post_box_type')) {addr.PMB_Designator__c = (String)components.get('post_box_type');}
        if (s.contains('post_box_number')) {addr.PMB__c = (String)components.get('post_box_number');}
		Map<String, Object> metadata = (Map<String, Object>)mappedJSON.get('metadata');
		if (s.contains('latitude')) {addr.npsp__Geolocation__Latitude__s = (Decimal)metadata.get('latitude');}
		if (s.contains('longitude')) {addr.npsp__Geolocation__Longitude__s = (Decimal)metadata.get('longitude');}
        if (s.contains('address_format')) {
            String addressFormat = (String)metadata.get('address_format');
			System.debug(addressFormat);            
            addr.Address_Format__c = addressFormat;
            if (addressFormat.contains('administrative_area')) {
				addr.npsp__MailingState__c = (String)components.get('administrative_area');
            } 
            else addr.npsp__MailingState__c = '';
            System.debug('Administrative area: ' + addr.npsp__MailingState__c);
            Pattern localityPattern = Pattern.compile('(?<!_)(locality)');
			Matcher matcher = localityPattern.matcher(addressFormat);
            Boolean depLocalityOnly = matcher.find()==false && addressFormat.contains('dependent_locality');                       
            if (depLocalityOnly) {addr.npsp__MailingCity__c = (String)components.get('dependent_locality');}
            else if (!depLocalityOnly) {addr.npsp__MailingCity__c = (String)components.get('locality');}
            else addr.npsp__MailingCity__c = '';
            System.debug('Locality: ' + addr.npsp__MailingCity__c);        
            if (addressFormat.contains('postal_code')) {addr.npsp__MailingPostalCode__c = (String)components.get('postal_code');}
            else addr.npsp__MailingPostalCode__c = '';
            System.debug('Postal code: ' + addr.npsp__MailingPostalCode__c);            
            List<String> lineByLineFormat = addressFormat.split('\\|');
            System.debug(lineByLineFormat);
            for (Integer i=0; i<lineByLineFormat.size(); i++) {
                matcher = localityPattern.matcher(lineByLineFormat[i]);
                if (!depLocalityOnly && matcher.find()) {addressLines[i] = addressLines[i].replaceAll((String)components.get('locality'), '');}
                else if (depLocalityOnly && lineByLineFormat[i].contains('dependent_locality')) {addressLines[i] = addressLines[i].replaceAll((String)components.get('dependent_locality'), '');}
				System.debug(addressLines[i]);                
                if (lineByLineFormat[i].contains('administrative_area')) {
                    addressLines[i] = addressLines[i].replaceAll((String)components.get('administrative_area'), '');
                    System.debug(addressLines[i]);
                }
                if (lineByLineFormat[i].contains('postal_code')) {
                    addressLines[i] = addressLines[i].replaceAll((String)components.get('postal_code'), '');
                    System.debug(addressLines[i]);                    
                }            
            }
            System.debug(addressLines);        
            String fullAddressPipeSeparated = String.join(addressLines, '|');
            System.debug(fullAddressPipeSeparated);
            fullAddressPipeSeparated = fullAddressPipeSeparated.replaceAll('^[\\s\\W]*?\\|', '');
            fullAddressPipeSeparated = fullAddressPipeSeparated.replaceAll('\\|[\\s\\W]*?\\|', '|');
            fullAddressPipeSeparated = fullAddressPipeSeparated.replaceAll('\\|[\\s\\W]*?$', '');
            System.debug(fullAddressPipeSeparated);
            addressLines = fullAddressPipeSeparated.split('\\|');
            System.debug(addressLines);
            if (addressLines.size()==1) {
                addr.npsp__MailingStreet__c = addressLines[0];
                addr.npsp__MailingStreet2__c = '';
            }
            else {
                Long numAddressLinesHalved = (addressLines.size()/2.0).round(System.RoundingMode.CEILING);
                Integer numAddressLinesHalvedInt = Integer.valueOf(numAddressLinesHalved);
                System.debug(numAddressLinesHalvedInt);
                List<String> street1 = new List<String>();
                List<String> street2 = new List<String>();
                for (Integer i=0; i<numAddressLinesHalvedInt; i++) {
                    street1.add(addressLines[i]);
                }
                for (Integer i=numAddressLinesHalvedInt; i<addressLines.size(); i++) {
                    street2.add(addressLines[i]);
                }
                addr.npsp__MailingStreet__c = String.join(street1, ', ');
                System.debug(addr.npsp__MailingStreet__c);
                addr.npsp__MailingStreet2__c = String.join(street2, ', '); 
                System.debug(addr.npsp__MailingStreet2__c);
            }
        }
		Map<String, Object> analysis = (Map<String, Object>)mappedJSON.get('analysis');
		if (s.contains('verification_status')) {addr.DPV__c = (String)analysis.get('verification_status');}
		if (s.contains('address_precision')) {addr.Address_Precision__c = (String)analysis.get('address_precision');}
        addr.npsp__Verified__c = true;
        addr.Do_Not_Verify__c = true;        
        return addr;
    }    
}